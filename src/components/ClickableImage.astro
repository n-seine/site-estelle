---
import { Image } from "astro:assets";

const { picture, alt } = Astro.props;
---

<a
  rel="prefetch"
  href={picture.name.toLowerCase().includes("animation")
    ? picture.filename
    : `${picture.filename}/m/1600x0`}
>
  <Image
    alt={alt}
    loading={"lazy"}
    src={picture.name.toLowerCase().includes("animation")
      ? picture.filename
      : `${picture.filename}/m/480x0`}
    data-large-image={picture.name.toLowerCase().includes("animation")
      ? picture.filename
      : `${picture.filename}/m/1600x0`}
    width={480}
    height={320}
    class="clickable-picture cursor-pointer hover:brightness-110"
  />
</a>
<script>
  const getUrl = (url: string) =>
    url.replace("//a.storyblok.com", "//a2.storyblok.com");

  const modal = document.getElementById("modal");
  const pictureContainer = document.createElement("img");

  modal?.appendChild(pictureContainer);

  pictureContainer.classList.add(
    "scale-0",
    "transition-all",
    "duration-300",
    "max-w-screen",
    "p-4",
    "md:p-16",
    "lg:p-24",
    "max-h-screen"
  );

  //Show modal when image is clicked
  const showModal = (image: HTMLElement) => {
    console.log(image);
    pictureContainer.src = getUrl(image.dataset.largeImage!);
    modal?.classList.remove("hidden");
    console.log("pictureContainer", pictureContainer);
    setTimeout(() => pictureContainer?.classList.add("scale-100"), 1);
  };
  //Hide modal when clicked
  const hideModal = () => {
    modal?.classList.add("hidden");
    pictureContainer?.classList.remove("scale-100");
    setTimeout(() => (pictureContainer.src = ""), 500);
  };

  modal?.addEventListener("click", hideModal);
  const images = document.getElementsByClassName(
    "clickable-picture"
  ) as HTMLCollectionOf<HTMLElement>;
  console.log("images", images);
  for (let i = 0; i < images.length; i++) {
    const image = images[i];
    console.log("image.dataset", image.dataset);
    image.addEventListener("click", (e) => {
      e.preventDefault();
      showModal(image);
    });
    image.addEventListener("mouseover", (e) => {
      new Image().src = getUrl(image.dataset.largeImage!);
    });
  }
</script>

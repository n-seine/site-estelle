---
import { storyblokEditable } from "@storyblok/astro";
import { useStoryblokApi } from "@storyblok/astro";
import PortfolioItem from "../PortfolioItem.astro";
import type { SchemaContext } from "astro:content";

type SanitizedProject = {
  title: string;
  featured: boolean;
  image: { alt: string; filename: string };
  alt: string;
  slug: string;
  tags: string[];
};

const storyblokApi = useStoryblokApi();

const { data } = await storyblokApi.get("cdn/stories/", {
  version:
    import.meta.env.STORYBLOK_IS_PREVIEW === "yes" ? "draft" : "published",
  content_type: "project",
});

const rawProjects = data.stories.map(
  (project: {
    content: { homeDisplay: any[] };
    full_slug: string;
    tag_list: string[];
  }) => {
    return {
      title: project.content.homeDisplay[0].title,
      featured: project.content.homeDisplay[0].featured,
      image: project.content.homeDisplay[0].coverPicture,
      tags: project.tag_list,
      slug: project.full_slug,
    };
  }
);
const featuredProject = rawProjects.find(
  (project: SanitizedProject) => project.featured
);
const projects = rawProjects.filter(
  (project: SanitizedProject) => project.slug !== featuredProject.slug
);

const { blok } = Astro.props;
---

<ul
  class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-12 md:gap-12 w-full md:w-11/12 max-w-7xl grid-flow-dense mx-auto"
>
  {
    featuredProject && (
      <PortfolioItem
        title={featuredProject.title}
        alt={featuredProject.image.alt}
        image={featuredProject.image.filename}
        featured={true}
        slug={featuredProject.slug}
        tags={featuredProject.tags}
      />
    )
  }
  {
    projects.map((project: SanitizedProject) => (
      <PortfolioItem
        title={project.title}
        alt={project.image.alt}
        image={project.image.filename}
        slug={project.slug}
        tags={project.tags}
        featured={false}
      />
    ))
  }
</ul>
